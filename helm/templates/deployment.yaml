apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{.Values.microserviceName}}-deployement"
spec:
  selector:
    matchLabels:
      app: {{.Values.microserviceName}}
  template:
    metadata:
      labels:
        app: {{.Values.microserviceName}}
    spec:
      serviceAccountName: "{{.Values.microserviceName}}-serviceaccount"
      containers:
        - name: {{.Values.microserviceName}}
          image: "{{.Values.image.repository}}:{{.Values.image.tag}}"
          env:
            {{- range $key, $value := .Values.envVariables}} 
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}           
          resources:
            {{- toYaml .Values.resources | nindent 12}}
          ports:
            - containerPort: {{.Values.container.port}}
          livenessProbe:
            httpGet:
              path: {{.Values.container.liveness.path}}
              port: {{.Values.container.port}}
            initialDelaySeconds: {{.Values.container.liveness.initialDelaySeconds}}
          readinessProbe:
            httpGet:
              path: {{.Values.container.readiness.path}}
              port: {{.Values.container.port}}
            initialDelaySeconds: {{.Values.container.readiness.initialDelaySeconds}}
          volumeMounts:
            {{- toYaml .Values.container.volumeMounts | nindent 12}}
      volumes: 
        {{- toYaml .Values.volumes | nindent 8}}